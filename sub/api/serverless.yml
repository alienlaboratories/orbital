#
# Copyright 2017 Alien Labs.
#

#
# Config:
# https://serverless.com/framework/docs/providers/aws/guide/serverless.yml
#
# Console:
# https://console.aws.amazon.com/lambda/home?region=us-east-1#/functions?display=list
#

service: orbital-api


provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1

  stage: dev

  environment:
    SERVICE_NAME:   ${self:service}
    VERSION:        "0.0.1"
    CONFIG_DIR:     "./config"
#   DATABASE:       'memory'
    DATABASE:       'dynamodb'
    AWS_USER:       "testing"
    AWS_CONFIG:     "aws-dev.yml"


plugins:
  # https://www.npmjs.com/package/serverless-domain-manager
  - "serverless-domain-manager"

  # TODO(burdon): DynamoDB local.
  # https://www.gorillastack.com/news/serverless-framework-local-development-environments
  # https://www.npmjs.com/package/serverless-dynamodb-local
# - "serverless-dynamodb-local"

  # sls offline start
  # https://www.npmjs.com/package/serverless-offline
  - "serverless-offline"

  # sls info --json | jq
  # https://www.npmjs.com/package/serverless-plugin-info-json
  - "serverless-plugin-info-json"

  # Webpack
  # https://www.npmjs.com/package/serverless-webpack
  - "serverless-webpack"


custom:
  webpack: "webpack.config.js"

  # TODO(burdon): Remove babel-runtime in package.json
  # Unable to import module 'handler': Error
  webpackIncludeModules: true

  customDomain:
    domainName: api.orbitaldb.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

  # TODO(burdon): Config dir: ../../config (workaround ln -s)
  # https://www.npmjs.com/package/serverless-offline#usage-and-command-line-options
  serverless-offline:
    port: 3000


functions:

  status:
    handler: handler.status
    description: "Status service."
    events:
      - http:
          path: status
          method: get
          cors: true

  oauth:
    handler: handler.oauth
    description: "OAuth service."
    events:
      - http:
          path: oauth/login/{path}
          method: get
      - http:
          path: oauth/callback/{path}
          method: get

  registry:
    handler: handler.registry
    description: "Registry GraphQL API."
    events:
      - http:
          path: registry
          method: post
          cors: true

  database:
    handler: handler.database
    description: "Database GraphQL API."
    events:
      - http:
          path: db
          method: post
          cors: true
